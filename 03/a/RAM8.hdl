// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho);

    Register(in=in, load=ao, out=aoo);
    Register(in=in, load=bo, out=boo);
    Register(in=in, load=co, out=coo);
    Register(in=in, load=do, out=doo);
    Register(in=in, load=eo, out=eoo);
    Register(in=in, load=fo, out=foo);
    Register(in=in, load=go, out=goo);
    Register(in=in, load=ho, out=hoo);

    Mux8Way16(a=aoo, b=boo, c=coo, d=doo, e=eoo, f=foo, g=goo, h=hoo, sel=address, out=out);

}