// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho);

    RAM8(in=in, load=ao, address=address[0..2], out=aoo);
    RAM8(in=in, load=bo, address=address[0..2], out=boo);
    RAM8(in=in, load=co, address=address[0..2], out=coo);
    RAM8(in=in, load=do, address=address[0..2], out=doo);
    RAM8(in=in, load=eo, address=address[0..2], out=eoo);
    RAM8(in=in, load=fo, address=address[0..2], out=foo);
    RAM8(in=in, load=go, address=address[0..2], out=goo);
    RAM8(in=in, load=ho, address=address[0..2], out=hoo);

    Mux8Way16(a=aoo, b=boo, c=coo, d=doo, e=eoo, f=foo, g=goo, h=hoo, sel=address[3..5], out=out);

}